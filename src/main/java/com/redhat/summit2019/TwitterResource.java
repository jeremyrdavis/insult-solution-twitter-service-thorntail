package com.redhat.summit2019;

import twitter4j.Status;
import twitter4j.StatusUpdate;
import twitter4j.Twitter;
import twitter4j.TwitterFactory;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;

import com.redhat.summit2019.model.Insult;

import java.time.Instant;
import java.util.Date;

@Path("/")
public class TwitterResource {

    @POST
    @Path("/tweet")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response tweet(Insult insult) {

        Response.ResponseBuilder builder = null;

        try{
            Twitter twitter = TwitterFactory.getSingleton();
            StringBuilder stringBuilder = new StringBuilder()
                    .append(insult.getInsult())
                    .append(" - Generated by Thorntail with the Red Hat Summit Shakespearean Insult Workshop at ")
                    .append(Date.from(Instant.now()).getTime());
            StatusUpdate statusUpdate = new StatusUpdate(stringBuilder.toString());
            Status status = twitter.updateStatus(statusUpdate);
            System.out.println(status.toString());
            builder = Response.ok().entity(statusUpdate);
        }catch(Exception e){
            System.out.println(e.getMessage());
            builder = Response.status(Response.Status.BAD_REQUEST).entity(e);
    }
    return builder.build();
    }
}
